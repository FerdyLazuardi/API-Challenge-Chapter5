{
  "openapi": "3.0.0",
  "info": {
    "title": "Challenge FSW 3 chapter 5",
    "description": "API description in Markdown.",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Users",
      "description": "This is API for managing CRUD Users"
    },
    {
      "name": "Shops",
      "description": "This is API for managing CRUD Shops"
    },
    {
      "name": "Products",
      "description": "This is API for managing CRUD Products"
    }
  ],
  "servers": [{
    "url": "http://localhost:3000/api/v1/"
  }],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a list of users.",
        "description": "This is API for get all user data",
        "responses": {
          "200": {
            "description": "Success get users data"
          }
        }
      }
    },
      "/users/register": {
        "post": {
          "tags": [
            "Users"
          ],
          "summary": "Create a new user",
          "description": "This is API for create new user",
          "requestBody": {
            "description": "Success create new user",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "udin"
                    },
                    "password": {
                      "type": "string",
                      "example": "1234"
                    },
                    "role": {
                      "type": "string",
                      "example": "admin"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Success create new User",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string",
                            "example": "Udin"
                          },
                          "password": {
                            "type": "string",
                            "example": "1234"
                          },
                          "role": {
                            "type": "string",
                            "example": "admin"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Failed because username is same",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "failed"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed because username is same"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/login": {
        "post": {
          "tags": [
            "Users"
          ],
          "summary": "Login account user",
          "description": "This is API for login account user",
          "requestBody": {
            "description": "Success create login",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "udin"
                    },
                    "password": {
                      "type": "string",
                      "example": "1234"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Success create new User",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "Success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string",
                            "example": "Udin"
                          },
                          "role": {
                            "type": "string",
                            "example": "admin"
                          },
                          "token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidXNlcm5hbWUiOiJ1ZGluIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNjgzNDU0MTgwfQ.8mNgr-H95TrmSQudNkfF0SGL92AvCdKOzX8BnSz2Uf8"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Failed because username/password is wrong",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "failed"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed because username/password is wrong"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{id}": {
        "delete": {
          "tags": [
            "Users"
          ],
          "summary": "Delete a user",
          "description": "This is API for deleting a user",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "description": "User ID",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success delete user"
            },
            "404": {
              "description": "User not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "failed"
                      },
                      "message": {
                        "type": "string",
                        "example": "User not found"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
    "/shops": {
      "get": {
        "tags": [
          "Shops"
        ],
        "summary": "Returns a list of shops.",
        "description": "This is API for get all shop data",
        "responses": {
          "200": {
            "description": "Success get shops data"
          }
        }
      },
      "post": {
        "tags": [
          "Shops"
        ],
        "summary": "Create a new shop",
        "description": "This is API for create new shop. *You need to login your account and submit a token in authorize button",
        "security": [{
          "bearerToken": []
        }],
        "requestBody": {
          "description": "Success create new shop",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "toko ferdy"
                  },
                  "city": {
                    "type": "string",
                    "example": "semarang"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success create new Shop",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "toko ferdy"
                        },
                        "city": {
                          "type": "string",
                          "example": "semarang"
                        },
                        "userId": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed because name shop is empty",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed because shop name empty"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shops/{id}": {
      "delete": {
        "tags": [
          "Shops"
        ],
        "summary": "Delete a shop",
        "description": "This is API for deleting a shop *You need to login your account and submit a token in authorize button",
        "security": [{
          "bearerToken": []
        }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Shop ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete shop"
          },
          "404": {
            "description": "shop not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "shop not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Returns a list of products.",
        "description": "This is API for get all product data",
        "responses": {
          "200": {
            "description": "Success get all product data"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new Products",
        "description": "This is API for create new Products. *You need to login your account and submit a token in authorize button",
        "security": [{
          "bearerToken": []
        }],
        "requestBody": {
          "description": "Success create new Products",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "buku"
                  },
                  "price": {
                    "type": "integer",
                    "example": 10000
                  },
                  "stock": {
                    "type": "integer",
                    "example": 20
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success create new Product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "buku"
                        },
                        "price": {
                          "type": "integer",
                          "example": 10000
                        },
                        "stock": {
                          "type": "integer",
                          "example": 20
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed because name shop is empty",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed because shop name empty"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product",
        "description": "This is API for deleting a product *You need to login your account and submit a token in authorize button",
        "security": [{
          "bearerToken": []
        }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete product"
          },
          "404": {
            "description": "product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Product not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "users": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "udin"
          },
          "password": {
            "type": "string",
            "example": "1234"
          },
          "role": {
            "type": "string",
            "example": "admin"
          }
        }
      },
      "shops": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "toko ferdy"
          },
          "city": {
            "type": "string",
            "example": "semarang"
          },
          "userId": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "products": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "buku"
          },
          "price": {
            "type": "integer",
            "example": 10000
          },
          "stock": {
            "type": "integer",
            "example": 20
          }
        }
      }
    },
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}